# Initial workflow for building manylinux wheel using `maturin` forked from:
# https://github.com/konstin/complex-manylinux-maturin-dockers

name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-manylinux-wheel-via--rust-stable:
    name: Build manylinux wheel via Rust stable toolchain
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v1
      - name: Install stable Rust toolchain
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
      # # Insert steps here to install your other dependencies. Note that you're running inside of cent os 7, not ubuntu
      # - name: Installing custom dependency
      #   run: echo "Installing custom dependency"
      - name: Build
        run: |
          source $HOME/.cargo/env
          for PYBIN in /opt/python/cp3[6789]*/bin; do
            "${PYBIN}/pip" install maturin
            "${PYBIN}/maturin" build -m Cargo.toml -i "${PYBIN}/python" --release --manylinux 2014
          done
      # # Auditwheel isn't generally necessary. This is only shown as refernce for cases where you link
      # # external libraries, in which case you have to set manylinux to off and then use auditwheel repair
      # - name: Auditwheel repair
      #   run: |
      #     for wheel in nightly-only/target/wheels/*.whl; do
      #         auditwheel repair "${wheel}"
      #     done
